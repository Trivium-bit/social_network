{"version":3,"sources":["components/common/Paginator/paginator.module.css","../node_modules/classnames/index.js","components/Users/users.module.css","components/common/Paginator/Paginator.tsx","assets/images/default_ava.jpg","components/Users/User.tsx","components/Users/Users.tsx","Redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNuber","rightPortionPageNuber","className","styles","paginator","onClick","filter","p","map","cn","selectedPage","pageNuber","e","User","user","followingInProgress","follow","unfollow","to","id","src","photos","small","default_ava","alt","userPhoto","followed","disabled","some","name","status","Users","users","props","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","page","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","setUsers","React","Component","compose","connect","console","log","setCurrentPage","setTotalUsersCount","toggleFollowingProgress"],"mappings":";qGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,oBCDrH,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBrB,EAAOC,SAC3CG,EAAWkB,QAAUlB,EACrBJ,EAAOC,QAAUG,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,oBCNDJ,EAAOC,QAAU,CAAC,UAAY,2B,gLC0CfsB,EA/BU,SAAC,GAKtB,IAL4H,IAApGC,EAAmG,EAAnGA,gBAAiBC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,YAAaC,EAA2D,EAA3DA,cAA2D,IAA5CC,mBAA4C,MAA9B,GAA8B,EAEvHC,GAFuH,0FAE1GC,KAAKC,KAAKP,EAAkBC,IAEzCO,EAAQ,GACH1B,EAAI,EAAGA,GAAKuB,EAAYvB,IAC7B0B,EAAMrB,KAAKL,GAGf,IAAI2B,EAAeH,KAAKC,KAAKF,EAAaD,GATiF,EAUnFM,mBAAS,GAV0E,mBAUtHC,EAVsH,KAUvGC,EAVuG,KAWvHC,GAAwBF,EAAgB,GAAKP,EAAc,EAC3DU,EAAwBH,EAAgBP,EAE5C,OAAO,sBAAKW,UAAWC,IAAOC,UAAvB,UACFN,EAAgB,GAAK,wBAAQO,QAAS,WAAQN,EAAiBD,EAAgB,IAA1D,kBACrBH,EACIW,QAAO,SAAAC,GAAC,OAAIA,GAAKP,GAAwBO,GAAKN,KAC9CO,KAAI,SAACD,GACF,OAAO,uBAAML,UAAWO,IAAG,eAAGN,IAAOO,aAAerB,IAAgBkB,GAAKJ,IAAOQ,WAE5EN,QAAS,SAACO,GACNtB,EAAciB,IAHf,cAIEA,EAJF,MACEA,MAKhBX,EAAeE,GACZ,wBAAQO,QAAS,WAAQN,EAAiBD,EAAgB,IAA1D,sB,kBCtCG,MAA0B,wC,QC0C1Be,EA9BJ,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,oBAAqBC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAE7C,OACI,gCACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAKK,GAAhC,SACI,qBAAKC,IAA0B,MAArBN,EAAKO,OAAOC,MAAgBR,EAAKO,OAAOC,MAAQC,EAAaC,IAAK,SACxEtB,UAAWC,IAAOsB,cAE1B,+BACI,8BACKX,EAAKY,SACA,wBAAQC,SAAUZ,EAAoBa,MAAK,SAAAT,GAAE,OAAIA,IAAOL,EAAKK,MAAKd,QAAS,WAAQY,EAASH,EAAKK,KAAjG,wBACA,wBAAQQ,SAAUZ,EAAoBa,MAAK,SAAAT,GAAE,OAAIA,IAAOL,EAAKK,MAAKd,QAAS,WAAQW,EAAOF,EAAKK,KAA/F,yBAId,+BACI,gCACI,iCACI,oCAAOL,EAAKe,KAAZ,OACA,oCAAOf,EAAKgB,OAAZ,UAEJ,iCACI,oCAAO,qBAAP,OACA,oCAAO,kBAAP,mBCDTC,EAlBH,SAAC,GAA2F,IAAzF1C,EAAwF,EAAxFA,YAAaF,EAA2E,EAA3EA,gBAAiBC,EAA0D,EAA1DA,SAAUE,EAAgD,EAAhDA,cAAe0C,EAAiC,EAAjCA,MAAUC,EAAuB,oFACnG,OAAO,gCACH,cAAC,EAAD,CAAW5C,YAAaA,EAAaF,gBAAiBA,EAAiBC,SAAUA,EAAUE,cAAeA,EAAeC,YAAa,KACtI,8BAEQyC,EAAMxB,KAAI,SAAC0B,GAAD,OACN,cAAC,EAAD,CACIpB,KAAMoB,EACNnB,oBAAqBkB,EAAMlB,oBAC3BC,OAAQiB,EAAMjB,OACdC,SAAUgB,EAAMhB,UAJTiB,EAAEf,a,eCpBpBgB,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUL,OAUdM,EAAc,SAACF,GACxB,OAAOA,EAAMC,UAAUjD,UAEdmD,EAAqB,SAACH,GAC/B,OAAOA,EAAMC,UAAUG,iBAEdC,EAAiB,SAACL,GAC3B,OAAOA,EAAMC,UAAUK,MAEdC,EAAgB,SAACP,GAC1B,OAAOA,EAAMC,UAAUO,YAEdC,EAAyB,SAACT,GACnC,OAAOA,EAAMC,UAAUtB,qBCWrB+B,E,4MAMFxD,cAAgB,SAACyD,GAAwB,IAC9B3D,EAAY,EAAK6C,MAAjB7C,SACP,EAAK6C,MAAMe,aAAaD,EAAY3D,I,uDAPxC,WAAqB,IAAD,EACgB6D,KAAKhB,MAA9B5C,EADS,EACTA,YAAaD,EADJ,EACIA,SACpB6D,KAAKhB,MAAMe,aAAa3D,EAAaD,K,oBAQzC,WACI,OAAO,qCACF6D,KAAKhB,MAAMW,WAAa,cAACM,EAAA,EAAD,IAAgB,KAEzC,cAAC,EAAD,CAAO/D,gBAAiB8D,KAAKhB,MAAMO,gBAC/BpD,SAAU6D,KAAKhB,MAAM7C,SACrBC,YAAa4D,KAAKhB,MAAM5C,YACxBuD,WAAYK,KAAKhB,MAAMW,WACvBZ,MAAOiB,KAAKhB,MAAMD,MAClBhB,OAAQiC,KAAKhB,MAAMjB,OACnBC,SAAUgC,KAAKhB,MAAMhB,SACrB3B,cAAe2D,KAAK3D,cACpByB,oBAAqBkC,KAAKhB,MAAMlB,oBAChCoC,SAAUF,KAAKhB,MAAMkB,kB,GAxBRC,IAAMC,WAuDpBC,sBACXC,aAbkB,SAACnB,GAEnB,OADAoB,QAAQC,IAAI,mBACL,CACHzB,MAAOG,EAASC,GAChBhD,SAAUkD,EAAYF,GACtBI,gBAAiBD,EAAmBH,GACpC/C,YAAaoD,EAAeL,GAC5BQ,WAAYD,EAAcP,GAC1BrB,oBAAqB8B,EAAuBT,MAKvB,CACrBpB,WACAC,aACAkC,aACAO,mBACAC,uBACAC,4BACAZ,mBAROM,CAUbR","file":"static/js/3.52018bcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__1Eh9y\",\"pageNumber\":\"paginator_pageNumber__F0-bE\",\"selectedPage\":\"paginator_selectedPage__205OF\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2UTeJ\"};","import { useState } from 'react';\r\nimport styles from './paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10, ...props }: PropsType) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNuber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNuber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>prev</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNuber && p <= rightPortionPageNuber)\r\n            .map((p) => {\r\n                return <span className={cn({ [styles.selectedPage]: currentPage === p }, styles.pageNuber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }}> {p} </span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>next</button>}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator","export default __webpack_public_path__ + \"static/media/default_ava.3e520c6b.jpg\";","import styles from './users.module.css';\r\nimport { UsersType } from \"../../Redux/users-reducer\";\r\nimport default_ava from '../../assets/images/default_ava.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nlet User = ({ user, followingInProgress, follow, unfollow }: PropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/profile/\" + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : default_ava} alt={\"avatar\"}\r\n                    className={styles.userPhoto} />\r\n            </NavLink>\r\n            <span>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { unfollow(user.id) }}> Unfollow </button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { follow(user.id) }}>Follow </button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <div>\r\n                    <span>\r\n                        <div> {user.name} </div>\r\n                        <div> {user.status} </div>\r\n                    </span>\r\n                    <span>\r\n                        <div> {\"u.location.country\"} </div>\r\n                        <div> {\"u.location.city\"} </div>\r\n                    </span>\r\n                </div>\r\n            </span>\r\n        </div>)\r\n}\r\nexport default User","import { UsersType } from \"../../Redux/users-reducer\";\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    users: UsersType[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n    setUsers: (users: Array<UsersType>) => void\r\n}\r\n\r\nlet Users = ({ currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props }: PropsType) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalItemsCount} pageSize={pageSize} onPageChanged={onPageChanged} portionSize={10} />\r\n        <div>\r\n            {\r\n                users.map((u: UsersType) =>\r\n                    <User key={u.id}\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        follow={props.follow}\r\n                        unfollow={props.unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import { AppStateType } from \"./redux-store\";\r\nimport { createSelector } from \"reselect\"\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// в createSelector первым параметром закидываем Selector 'getUsers'\r\n// далее зависимости 'users'\r\n\r\n// export const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n// return users.filter (u => true);\r\n// })\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.page;\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../Redux/users-reducer';\r\n\r\nimport { UsersType } from \"./../../Redux/users-reducer\"\r\nimport { AppStateType } from './../../Redux/redux-store'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../Redux/users-selectors';\r\n\r\ntype MapStateToPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            <Users totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                isFetching={this.props.isFetching}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n                setUsers={this.props.setUsers}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/* let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n} */\r\n\r\n\r\n// с использованием Selectors\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    console.log(\"mapStateToProps\")\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    }),\r\n)(UsersContainer)"],"sourceRoot":""}